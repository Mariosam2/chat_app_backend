generator client {
  provider = "prisma-client-js"
  output   = "../client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               BigInt     @id @default(autoincrement())
  uuid             String     @unique @default(uuid())
  username         String     @unique
  profile_picture  String     @default("/images/default_pfp.png") @db.VarChar(255)
  email            String     @unique
  password         String     @db.VarChar(255)
  created_at       DateTime   @default(now())
  deleted_at       DateTime?
  chats            UserChat[]
  sentMessages     Message[]  @relation("sender")
  receivedMessages Message[]  @relation("receiver")

  @@map("users")
}

model Chat {
  id         BigInt     @id @default(autoincrement())
  uuid       String     @unique @default(uuid())
  created_at DateTime   @default(now())
  messages   Message[]
  users      UserChat[]

  @@map("chats")
}

model UserChat {
  user       User      @relation(fields: [user_id], references: [id])
  user_id    BigInt
  Chat       Chat      @relation(fields: [chat_id], references: [id])
  chat_id    BigInt
  deleted_at DateTime?

  @@unique([user_id, chat_id])
  @@map("chat_user")
}

model Message {
  id          BigInt    @id @default(autoincrement())
  uuid        String    @unique @default(uuid())
  content     String    @db.VarChar(500)
  sender      User?     @relation("sender", fields: [sender_id], references: [id])
  receiver    User?     @relation("receiver", fields: [receiver_id], references: [id])
  sender_id   BigInt?
  receiver_id BigInt?
  Chat        Chat      @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  chat_id     BigInt
  created_at  DateTime  @default(now())
  edited_at   DateTime?

  @@map("messages")
}
